name: Build Project

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Print Working Directory
        run: pwd
      
      - name: Show Docker containers
        run: docker ps -a

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Run Unit Tests
        run: ./gradlew test --no-daemon

      - name: Check Code Quality
        run: ./gradlew check --no-daemon

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./build/reports/tests/test/

      - name: Upload Test Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-report
          path: ./build/reports/jacoco/test/html/
      
      - name: Dispatch Repository Event
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}
          repository: s-bose7/asc-cms-api
          event-type: docker-image-build-and-push
